{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "PolicyXMLBaseUrl": {
      "type": "string"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "CLM Contract - iCertis",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "contract",
        "path": "internal/contract",
        "protocols": [
          "http",
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Create FYF contract",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "createfyfacontract",
        "method": "POST",
        "urlTemplate": "/createfyfacontract"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/createfyfacontract')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'contract')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/contract-createfyfacontract-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/createfyfacontract/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'contract', 'createfyfacontract')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Generate token for ICertis",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "generatetoken",
        "method": "GET",
        "urlTemplate": "/generatetoken"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/generatetoken')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'contract')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/contract-generatetoken-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/generatetoken/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'contract', 'generatetoken')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "get Token",
        "method": "GET",
        "urlTemplate": "/internal/gettoken"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/get-token')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'contract')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/contract-get-token-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/get-token/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'contract', 'get-token')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "get contract",
        "request": {
          "queryParameters": [
            {
              "name": "contractId",
              "type": "string",
              "required": true,
              "values": []
            },
            {
              "name": "contractType",
              "type": "string",
              "required": true,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "getcontract",
        "method": "GET",
        "urlTemplate": "/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/getcontract')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'contract')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/contract-getcontract-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/getcontract/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'contract', 'getcontract')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "contractId",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "contractType",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "publishcontract",
        "method": "POST",
        "urlTemplate": "/publishcontract"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/publishcontract')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'contract')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/contract-publishcontract-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/publishcontract/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'contract', 'publishcontract')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "test token",
        "method": "GET",
        "urlTemplate": "/testtoken"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/test-token')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'contract')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/contract-test-token-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/test-token/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'contract', 'test-token')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "mdtype",
            "description": "customer or organization or vessel",
            "type": "string",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "validate master data",
        "method": "GET",
        "urlTemplate": "/validate/{mdtype}/"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/validate-master-data')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'contract')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/contract-validate-master-data-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/validate-master-data/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'contract', 'validate-master-data')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/contract-apiPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/contract/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'contract')]"
      ]
    },
    {
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Echo API",
        "serviceUrl": "http://echoapi.cloudapp.net/api",
        "path": "echo",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Create resource",
        "method": "POST",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/echo-api-create-resource-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'create-resource')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Modify Resource",
        "method": "PUT",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/modify-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Remove resource",
        "method": "DELETE",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/remove-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve header only",
        "method": "HEAD",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/echo-api-retrieve-header-only-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-header-only')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
        "request": {
          "queryParameters": [
            {
              "name": "param1",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "type": "string",
              "defaultValue": "sample",
              "required": true,
              "values": [
                "sample"
              ]
            },
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "number",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Returned in all cases.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource",
        "method": "GET",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
        "request": {
          "queryParameters": [
            {
              "name": "param1",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "type": "string",
              "defaultValue": "sample",
              "required": true,
              "values": [
                "sample"
              ]
            },
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource (cached)",
        "method": "GET",
        "urlTemplate": "/resource-cached"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/echo-api-retrieve-resource-cached-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-resource-cached')]"
      ]
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/starter/echo-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/unlimited/echo-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "description": "FYF Agreement",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "FYF Agreement",
        "path": "internal/fyfagreement",
        "protocols": [
          "http",
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Get Agreement data",
        "request": {
          "queryParameters": [
            {
              "name": "agreementNum",
              "description": "Agreement Number",
              "type": "string",
              "required": true,
              "values": [
                "2342"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "Get Agreement",
        "method": "GET",
        "urlTemplate": "/getagreement"
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement/getagreementinfo')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'fyfagreement')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/fyfagreement-getagreementinfo-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement/getagreementinfo/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'fyfagreement', 'getagreementinfo')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "testlogin",
        "method": "GET",
        "urlTemplate": "/testlogin"
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement/testlogin')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'fyfagreement')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/fyfagreement-testlogin-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement/testlogin/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'fyfagreement', 'testlogin')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "Update Agreement",
        "method": "POST",
        "urlTemplate": "/updatecontractinfo"
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement/update-agreement')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'fyfagreement')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/fyfagreement-update-agreement-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement/update-agreement/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'fyfagreement', 'update-agreement')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "upsert contract",
        "method": "POST",
        "urlTemplate": "/contract"
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement/upsert-contract')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'fyfagreement')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/fyfagreement-upsert-contract-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement/upsert-contract/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'fyfagreement', 'upsert-contract')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/fyfagreement-apiPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/fyfagreement/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'fyfagreement')]"
      ]
    },
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "workorder",
        "path": "internal/workorder",
        "protocols": [
          "http",
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "callinternalfunc",
        "method": "GET",
        "urlTemplate": "/callinternalfunc"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/callinternalfunc')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'workorder')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/workorder-callinternalfunc-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/callinternalfunc/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'workorder', 'callinternalfunc')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "calllogicappprivatelink",
        "method": "GET",
        "urlTemplate": "/calllogicappprivatelink"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/calllogicappprivatelink')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'workorder')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/workorder-calllogicappprivatelink-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/calllogicappprivatelink/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'workorder', 'calllogicappprivatelink')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "createwo",
        "method": "POST",
        "urlTemplate": "/createwo"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/createwo')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'workorder')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/workorder-createwo-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/createwo/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'workorder', 'createwo')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "createwousingsp",
        "method": "POST",
        "urlTemplate": "/createwousingsp"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/createwousingsp')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'workorder')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/workorder-createwousingsp-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/createwousingsp/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'workorder', 'createwousingsp')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "customercreated",
        "method": "GET",
        "urlTemplate": "/customercreated"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/customercreated')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'workorder')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "wonum",
              "type": "string",
              "required": false,
              "values": [
                "1"
              ]
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "getwoinfo",
        "method": "GET",
        "urlTemplate": "/getwoinfo"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/getwoinfo')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'workorder')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/workorder-getwoinfo-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/getwoinfo/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'workorder', 'getwoinfo')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "test managed identity",
        "method": "POST",
        "urlTemplate": "/test/publish"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/test-managed-identity')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'workorder')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/workorder-test-managed-identity-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/test-managed-identity/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'workorder', 'test-managed-identity')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "updatewoprojectinfo",
        "method": "POST",
        "urlTemplate": "/updatewoprojectinfo"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/updatewoprojectinfo')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'workorder')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/workorder-updatewoprojectinfo-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/updatewoprojectinfo/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'workorder', 'updatewoprojectinfo')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "upsertProject",
        "method": "POST",
        "urlTemplate": "/upsertProject"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/upsertproject')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'workorder')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/workorder-upsertproject-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/workorder/upsertproject/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'workorder', 'upsertproject')]"
      ]
    }
  ]
}